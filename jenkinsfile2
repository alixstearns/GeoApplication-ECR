pipeline {
    agent any
    tools{
       maven 'M2_HOME'
           }
    stages{
         stage('Sonarqube scan'){
        agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
            steps {
                withSonarQubeEnv('sonarQube') {
        sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=alixstearns_geoapp'
                }
            }
        }
        stage('maven commands'){
           steps {
            sh 'mvn clean test compile install package'
           } 
        }
        stage('upload artifact'){
           steps {
              sh 'curl -uadmin:AP8gqnnJFGjpmxzN9a1p4zdFjHe -T target/bio*.jar "http://3.90.1.50:8081/artifactory/geoapp/"'
            } 
        }
       stage('docker image built'){
           steps {
            sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 180509705435.dkr.ecr.us-east-1.amazonaws.com'
            sh 'docker build -t geoapp .'
           }
       }
                    
       stage('push image to ECR'){
           steps {
            sh 'docker tag geoapp:latest 180509705435.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            sh 'docker push 180509705435.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            
               } 
           }

        }
   }
